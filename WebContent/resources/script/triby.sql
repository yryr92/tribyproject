



INSERT INTO MEMBER VALUES(22222222,'admin@triby.com','admin','박현정','여자','19960913','010-4552-1941','photo','category',0,SYSDATE,SYSDATE,DEFAULT,DEFAULT);
INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL,'user01@kh.com','user01','김민상','남자','19960713','null','null','null',0,SYSDATE,SYSDATE,DEFAULT,DEFAULT);
INSERT INTO HOST VALUES(SEQ_HNO.NEXTVAL,'host01@kh.com','host01','null','host01','최예린','null','최예린','null','null',0,0,SYSDATE,SYSDATE,DEFAULT,DEFAULT,'intro','image');
INSERT INTO NOTICE VALUES(SEQ_NNO.NEXTVAL,'호스트','제목','내용',SYSDATE,DEFAULT);
INSERT INTO NOTICE VALUES(SEQ_NNO.NEXTVAL,'비공개','제목','내용',SYSDATE,'N');
INSERT INTO TRIBY VALUES(SEQ_TNO.NEXTVAL,'TITLE','CONTENT','CONTEN1','CONTENT2','CONTENT3',50000001,'AC1','AC2','AC3','ADDRESS',DEFAULT,DEFAULT,SYSDATE,DEFAULT,0);
INSERT INTO T_OPTION VALUES(SEQ_ONO.NEXTVAL,7,1,2,1,'TDAY','TTIME','N');
INSERT INTO PAYMENT VALUES(SEQ_PNO.NEXTVAL,10000021,2,10000,SYSDATE,'INFO',1000,'Y');
INSERT INTO PAYMENT VALUES(SEQ_PNO.NEXTVAL,10000021,2,10000,SYSDATE,'INFO',1000,'N');
INSERT INTO PAYMENT VALUES(SEQ_PNO.NEXTVAL,10000021,2,10000,TO_DATE('19/10/31'),'INFO',1000,'N');



SELECT * FROM PAYMENT
WHERE PAYMENT_DATE IN (SELECT TRUNC(SYSDATE,'MM') +LEV -16 AS THIS_MONTH 
FROM (SELECT LEVEL AS LEV
        FROM DUAL
        CONNECT BY LEVEL < TO_CHAR(LAST_DAY(SYSDATE),'DD'))) AND STATUS='Y';
        
        
SELECT * FROM PAYMENT
WHERE PAYMENT_DATE IN (SELECT TRUNC(SYSDATE,'MM') +LEV -16 AS THIS_MONTH 
FROM (SELECT LEVEL AS LEV
        FROM DUAL
        CONNECT BY LEVEL < TO_CHAR(LAST_DAY(SYSDATE),'DD'))) AND STATUS='Y';
        
        
--CREATE OR REPLACE VIEW V_PAYMENT
--AS
--SELECT * FROM PAYMENT
--WHERE PAYMENT_DATE IN (SELECT TRUNC(SYSDATE,'MM') +LEV -16 AS THIS_MONTH 
--FROM (SELECT LEVEL AS LEV
--        FROM DUAL
--        CONNECT BY LEVEL < TO_CHAR(LAST_DAY(SYSDATE),'DD'))) AND STATUS='N';
        
CREATE OR REPLACE VIEW V_PAYMENT
AS
SELECT * FROM PAYMENT
JOIN CALCULATE USING(TRIBY_OP_NO)
WHERE PAYMENT_DATE IN (SELECT TRUNC(SYSDATE,'MM') +LEV -16 AS THIS_MONTH 
FROM (SELECT LEVEL AS LEV
        FROM DUAL
        CONNECT BY LEVEL < TO_CHAR(LAST_DAY(SYSDATE),'DD'))) AND STATUS='N' AND CAL_STATUS='N';

CREATE OR REPLACE VIEW V_SUM
AS
SELECT TRIBY_OP_NO,SUM(PAYMENT_FINAL)AS CAL_SUM
FROM V_PAYMENT
GROUP BY TRIBY_OP_NO;

SELECT CAL_SUM
FROM V_SUM
WHERE TRIBY_OP_NO=6;

--CREATE OR REPLACE VIEW V_CALCULATE
--AS
--SELECT HOST_NO,HOST_ACCOUNTNAME,BANK_NAME,ACCOUNT,TRIBY_TITLE,CAL_SUM
--FROM V_SUM 
--JOIN T_OPTION USING(TRIBY_OP_NO)
--JOIN TRIBY ON TRIBY_ID = TRIBY_NO
--JOIN HOST USING(HOST_NO);

CREATE OR REPLACE VIEW V_CALCULATE
AS
SELECT HOST_NO,HOST_ACCOUNTNAME,BANK_NAME,ACCOUNT,TRIBY_TITLE,TRIBY_OP_NO,CAL_SUM
FROM V_SUM 
JOIN T_OPTION USING(TRIBY_OP_NO)
JOIN TRIBY ON TRIBY_ID = TRIBY_NO
JOIN HOST USING(HOST_NO);



--CREATE OR REPLACE TRIGGER TRI_TOPTION
--AFTER UPDATE
--ON TRIBY 
--FOR EACH ROW
--BEGIN
--    UPDATE T_OPTION SET STATUS = 'Y' WHERE :NEW.TRIBY_NO = TRIBY_ID;
--END;

SELECT HOST_NO,HOST_ACCOUNTNAME,BANK_NAME,ACCOUNT,TRIBY_TITLE,CAL_SUM
FROM V_SUM 
JOIN T_OPTION USING(TRIBY_OP_NO)
JOIN TRIBY ON TRIBY_ID = TRIBY_NO
JOIN HOST USING(HOST_NO)
WHERE TRIBY_OP_NO = 2;





COMMIT;









CREATE OR REPLACE VIEW V_PAYMENT
AS
SELECT * FROM PAYMENT
WHERE PAYMENT_DATE IN (SELECT TRUNC(SYSDATE,'MM') +LEV -16 AS THIS_MONTH 
FROM (SELECT LEVEL AS LEV
        FROM DUAL
        CONNECT BY LEVEL < TO_CHAR(LAST_DAY(SYSDATE),'DD'))) AND STATUS='Y';
        
CREATE OR REPLACE VIEW V_PAYMENT_V
AS
SELECT * FROM PAYMENT
JOIN CALCULATE USING(TRIBY_OP_NO)
WHERE PAYMENT_DATE IN (SELECT TRUNC(SYSDATE,'MM') +LEV -16 AS THIS_MONTH 
FROM (SELECT LEVEL AS LEV
        FROM DUAL
        CONNECT BY LEVEL < TO_CHAR(LAST_DAY(SYSDATE),'DD'))) AND STATUS='Y' AND CAL_STATUS='N';

CREATE OR REPLACE VIEW V_SUM
AS
SELECT TRIBY_OP_NO,SUM(PAYMENT_FINAL)AS C_SUM
FROM V_PAYMENT
GROUP BY TRIBY_OP_NO;

SELECT CAL_SUM
FROM V_SUM
WHERE TRIBY_OP_NO=6;


CREATE OR REPLACE VIEW V_CALCULATE
AS
SELECT HOST_NO,HOST_ACCOUNTNAME,BANK_NAME,ACCOUNT,TRIBY_TITLE,TRIBY_OP_NO,C_SUM
FROM V_SUM 
JOIN T_OPTION USING(TRIBY_OP_NO)
JOIN TRIBY ON TRIBY_ID = TRIBY_NO
JOIN HOST USING(HOST_NO);


SELECT HOST_NO,HOST_ACCOUNTNAME,BANK_NAME,ACCOUNT,TRIBY_TITLE,C_SUM,CAL_STATUS
FROM V_SUM 
JOIN T_OPTION USING(TRIBY_OP_NO)
JOIN CALCULATE USING(TRIBY_OP_NO)
JOIN TRIBY ON TRIBY_ID = TRIBY_NO
JOIN HOST USING(HOST_NO)
WHERE TRIBY_OP_NO = 2;